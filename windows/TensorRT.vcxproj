<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Python|x64">
      <Configuration>Python</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\app\app.cpp" />
    <ClCompile Include="src\app\detection.cpp" />
    <ClCompile Include="src\app\pre_processing.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\adaptivePoolPlugin\adaptivePoolPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\batchedNMSInference.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\batchedNMSPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\kernel.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\nmsHelper.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\carafeFeatureReassemblePlugin\carafeFeatureReassemblePlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\deformableConvPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\deform_conv_cuda.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\modulatedDeformableConvPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\deformablePoolPlugin\deformablePoolPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\delta2bboxPlugin\delta2bboxPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\gridAnchorDynamicPlugin\gridAnchorDynamicPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\gridSamplePlugin\gridSamplePlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\groupNormPlugin\groupNormPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\InferPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\meshGridPlugin\meshGridPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\roiExtractorPlugin\roiExtractorPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\roiPoolPlugin\roiPoolPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchBmmPlugin\torchBmmPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumMaxMinPlugin\torchCumMaxMinPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumPlugin\torchCumPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchEmbeddingPlugin\torchEmbeddingPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchGatherPlugin\torchGatherPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchNMSPlugin\torchNMSPlugin.cpp" />
    <ClCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchUnfoldPlugin\torchUnfoldPlugin.cpp" />
    <ClCompile Include="src\tensorRT\builder\trt_builder.cpp" />
    <ClCompile Include="src\tensorRT\common\cuda_tools.cpp" />
    <ClCompile Include="src\tensorRT\common\ilogger.cpp" />
    <ClCompile Include="src\tensorRT\common\json.cpp" />
    <ClCompile Include="src\tensorRT\common\trt_tensor.cpp" />
    <ClCompile Include="src\tensorRT\import_lib.cpp" />
    <ClCompile Include="src\tensorRT\infer\trt_infer.cpp" />
    <ClCompile Include="src\tensorRT\onnxplugin\onnxplugin.cpp" />
    <ClCompile Include="src\tensorRT\onnxplugin\plugin_binary_io.cpp" />
    <ClCompile Include="src\tensorRT\onnx\onnx-ml.pb.cpp" />
    <ClCompile Include="src\tensorRT\onnx\onnx-operators-ml.pb.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\builtin_op_importers.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\LoopHelpers.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\ModelImporter.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\NvOnnxParser.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\onnx2trt_utils.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\OnnxAttrs.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\onnxErrorRecorder.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\RNNHelpers.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\ShapedWeights.cpp" />
    <ClCompile Include="src\tensorRT\onnx_parser\ShapeTensor.cpp" />
    <ClCompile Include="test\base_test.cpp" />
    <ClCompile Include="test\benchmark.cpp" />
    <ClCompile Include="test\detection_app_test.cpp" />
    <ClCompile Include="test\main.cpp" />
    <None Include="dll_export.def" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\app\app.hpp" />
    <ClInclude Include="src\app\detection.h" />
    <ClInclude Include="src\app\pre_processing.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\include\amir_cuda_util\common_util.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\include\amir_cuda_util\cuda_util.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\include\amir_cuda_util\cudnn_util.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\include\plugin\amirInferPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\amir_cuda_util\reduceUtils.cuh" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\adaptivePoolPlugin\adaptivePoolPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\adaptivePoolPlugin\adaptive_pool.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\batchedNMSInference.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\batchedNMSPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\bboxUtils.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\cub_helper.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\kernel.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\nmsUtils.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\plugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\carafeFeatureReassemblePlugin\carafeFeatureReassemblePlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\carafeFeatureReassemblePlugin\carafe_cuda.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\common\amirCommon.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\common\common.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\common\layer_base.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\common\serialize.hpp" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\deformableConvPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\deform_conv_cuda.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\modulatedDeformableConvPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\deformablePoolPlugin\deformablePoolPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\deformablePoolPlugin\deform_roi_pool.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\deformablePoolPlugin\deform_roi_pool_cuda_kernel.cuh" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\delta2bboxPlugin\delta2bbox.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\delta2bboxPlugin\delta2bboxPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\gridAnchorDynamicPlugin\gridAnchorDynamicPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\gridAnchorDynamicPlugin\grid_anchor_dynamic.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\gridSamplePlugin\gridSamplePlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\gridSamplePlugin\grid_sample.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\groupNormPlugin\groupNormPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\groupNormPlugin\group_norm.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\meshGridPlugin\meshGridPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\meshGridPlugin\mesh_grid.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\roiExtractorPlugin\roiExtractorPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\roiExtractorPlugin\roi_extractor.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\roiPoolPlugin\roiPoolPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\roiPoolPlugin\roi_pool.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchBmmPlugin\torchBmmPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumMaxMinPlugin\torchCumMaxMinPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumMaxMinPlugin\torch_cum_maxmin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumPlugin\torchCumPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumPlugin\torch_cum.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchEmbeddingPlugin\torchEmbeddingPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchEmbeddingPlugin\torch_embedding.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchGatherPlugin\torchGatherPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchGatherPlugin\torch_gather.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchNMSPlugin\bboxUtils.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchNMSPlugin\torchNMSPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchNMSPlugin\torch_nms.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchUnfoldPlugin\torchUnfoldPlugin.h" />
    <ClInclude Include="src\tensorRT\amirstan_plugin\src\plugin\torchUnfoldPlugin\torch_unfold.h" />
    <ClInclude Include="src\tensorRT\builder\trt_builder.hpp" />
    <ClInclude Include="src\tensorRT\common\cuda_tools.hpp" />
    <ClInclude Include="src\tensorRT\common\ilogger.hpp" />
    <ClInclude Include="src\tensorRT\common\infer_controller.hpp" />
    <ClInclude Include="src\tensorRT\common\json.hpp" />
    <ClInclude Include="src\tensorRT\common\monopoly_allocator.hpp" />
    <ClInclude Include="src\tensorRT\common\preprocess_kernel.cuh" />
    <ClInclude Include="src\tensorRT\common\trt_tensor.hpp" />
    <ClInclude Include="src\tensorRT\infer\trt_infer.hpp" />
    <ClInclude Include="src\tensorRT\onnxplugin\onnxplugin.hpp" />
    <ClInclude Include="src\tensorRT\onnxplugin\plugin_binary_io.hpp" />
    <ClInclude Include="src\tensorRT\onnx\onnx-ml.pb.h" />
    <ClInclude Include="src\tensorRT\onnx\onnx-operators-ml.pb.h" />
    <ClInclude Include="src\tensorRT\onnx\onnxifi.h" />
    <ClInclude Include="src\tensorRT\onnx\onnx_pb.h" />
    <ClInclude Include="src\tensorRT\onnx_parser\builtin_op_importers.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\ImporterContext.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\LoopHelpers.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\ModelImporter.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\NvOnnxParser.h" />
    <ClInclude Include="src\tensorRT\onnx_parser\onnx2trt.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\onnx2trt_common.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\onnx2trt_runtime.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\onnx2trt_utils.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\OnnxAttrs.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\onnxErrorRecorder.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\onnx_utils.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\RNNHelpers.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\ShapedWeights.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\ShapeTensor.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\Status.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\TensorOrWeights.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\toposort.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\trt_utils.hpp" />
    <ClInclude Include="src\tensorRT\onnx_parser\utils.hpp" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\amir_cuda_util\memcpyPermute.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\amir_cuda_util\repeatDims.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\amir_cuda_util\tensorMeanVar.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\adaptivePoolPlugin\adaptive_pool.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\allClassNMS.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\common.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\gatherNMSOutputs.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\permuteData.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\sortScoresPerClass.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\sortScoresPerImage.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\carafeFeatureReassemblePlugin\carafe_cuda_kernel.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\deform_conv_cuda_kernel.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\deformablePoolPlugin\deform_roi_pool.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\delta2bboxPlugin\delta2bbox.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\gridAnchorDynamicPlugin\grid_anchor_dynamic.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\gridSamplePlugin\grid_sample.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\groupNormPlugin\group_norm_kernel.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\meshGridPlugin\mesh_grid.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\roiExtractorPlugin\roi_extractor_kernel.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\roiPoolPlugin\roi_pool_kernel.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumMaxMinPlugin\torch_cum_maxmin.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumPlugin\torch_cum.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchEmbeddingPlugin\torch_embedding.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchGatherPlugin\torch_gather.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchNMSPlugin\torch_nms.cu" />
    <CudaCompile Include="src\tensorRT\amirstan_plugin\src\plugin\torchUnfoldPlugin\torch_unfold.cu" />
    <CudaCompile Include="src\tensorRT\common\preprocess_kernel.cu" />
    <CudaCompile Include="src\tensorRT\onnxplugin\plugins\DCNv2.cu" />
    <CudaCompile Include="src\tensorRT\onnxplugin\plugins\HSigmoid.cu" />
    <CudaCompile Include="src\tensorRT\onnxplugin\plugins\HSwish.cu" />
    <CudaCompile Include="src\tensorRT\onnxplugin\plugins\ScatterND.cu" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="src\tensorRT\amirstan_plugin\src\amir_cuda_util\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\adaptivePoolPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\batchedNMSPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\carafeFeatureReassemblePlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\deformableConvPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\deformablePoolPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\delta2bboxPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\gridAnchorDynamicPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\gridSamplePlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\groupNormPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\meshGridPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\roiExtractorPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\roiPoolPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchBmmPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumMaxMinPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchCumPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchEmbeddingPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchGatherPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchNMSPlugin\CMakeLists.txt" />
    <Text Include="src\tensorRT\amirstan_plugin\src\plugin\torchUnfoldPlugin\CMakeLists.txt" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{FBF775F5-DAB4-4BC1-97A9-D36301073438}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>TensorRT</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
    <UseOfMfc>Static</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <UseOfMfc>Static</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Python|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <UseOfMfc>Static</UseOfMfc>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.3.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Python|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>workspace</OutDir>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>./lean/cuda11.3-trt8.2.2.1/include;./lean/opencv4.5.4/include;./lean/protobuf3.11.4/include;./src;./src/tensorRT;./src/tensorRT/common;src/tensorRT/amirstan_plugin/include;src/tensorRT/amirstan_plugin/src/plugin/common;$(VC_IncludePath);$(WindowsSDK_IncludePath);./src/app;third_party/googletest/googletest/include;third_party/googletest/googlemock/include</IncludePath>
    <LibraryPath>./lean/opencv4.5.4/lib;./lean/protobuf3.11.4/lib;./lean/cuda11.3-trt8.2.2.1/lib/x64;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64);third_party/googletest/build/lib/Debug</LibraryPath>
    <TargetName>$(ProjectName)d</TargetName>
    <ExcludePath>$(ExcludePath)</ExcludePath>
    <SourcePath>$(SourcePath)</SourcePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>workspace</OutDir>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>./lean/cuda11.3-trt8.2.2.1/include;./lean/opencv4.5.4/include;./lean/protobuf3.11.4/include;./src;./src/tensorRT;./src/tensorRT/common;$(VC_IncludePath);$(WindowsSDK_IncludePath);./src/tensorRT/amirstan_plugin/include;./src/tensorRT/amirstan_plugin/src/plugin/common;third_party/googletest/googletest/include;third_party/googletest/googlemock/include;./src/app</IncludePath>
    <LibraryPath>./lean/opencv4.5.4/lib;./lean/protobuf3.11.4/lib;./lean/cuda11.3-trt8.2.2.1/lib/x64;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64)</LibraryPath>
    <SourcePath>$(SourcePath)</SourcePath>
    <ExcludePath>$(ExcludePath)</ExcludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Python|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>workspace</OutDir>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>./lean/cuda11.3/include;./lean/cudnn8.0.4/include;./lean/opencv4.5.4/include;./lean/TensorRT8.2.2.1/include;./lean/protobuf3.11.4/include;./src;./src/tensorRT;./src/tensorRT/common;$(VC_IncludePath);$(WindowsSDK_IncludePath);src/tensorRT/amirstan_plugin/src/plugin/common;src/tensorRT/amirstan_plugin/include</IncludePath>
    <LibraryPath>./lean/TensorRT8.2.2.1/lib;./lean/opencv4.5.4/lib;./lean/cudnn8.0.4/lib;./lean/protobuf3.11.4/lib;./lean/cuda11.3/lib;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64)</LibraryPath>
    <TargetName>libpytrtc</TargetName>
    <TargetExt>.pyd</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <OpenMPSupport>true</OpenMPSupport>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <AdditionalIncludeDirectories>./lean/cuda11.3/include</AdditionalIncludeDirectories>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opencv_world454d.lib;gtest.lib;gmock.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <IgnoreSpecificDefaultLibraries>opencv_world346d.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>third_party/googletest/build/lib/Debug</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <GPUDebugInfo>false</GPUDebugInfo>
      <CodeGeneration>compute_61,sm_61</CodeGeneration>
      <Defines>ONNX_ML</Defines>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <OpenMPSupport>true</OpenMPSupport>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <AdditionalIncludeDirectories>
      </AdditionalIncludeDirectories>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opencv_world454.lib;gtest.lib;gmock.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>
      </ModuleDefinitionFile>
      <AdditionalLibraryDirectories>third_party/googletest/build/lib/Release;</AdditionalLibraryDirectories>
      <IgnoreSpecificDefaultLibraries>opencv_world346.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
    </Link>
    <CudaCompile>
      <CodeGeneration>compute_86,sm_86</CodeGeneration>
      <Defines>ONNX_ML</Defines>
      <TargetMachinePlatform>32</TargetMachinePlatform>
      <CudaRuntime>Static</CudaRuntime>
      <AdditionalOptions>-gencode=arch=compute_86,code=sm_86 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalCompilerOptions>
      </AdditionalCompilerOptions>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Python|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>HAS_PYTHON;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <OpenMPSupport>true</OpenMPSupport>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <LanguageStandard>stdcpp14</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>dll_export.def</ModuleDefinitionFile>
      <OutputFile>python/pytrt/$(TargetName)$(TargetExt)</OutputFile>
    </Link>
    <CudaCompile>
      <CodeGeneration>compute_86,sm_86</CodeGeneration>
      <Defines>ONNX_ML</Defines>
    </CudaCompile>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.3.targets" />
  </ImportGroup>
</Project>